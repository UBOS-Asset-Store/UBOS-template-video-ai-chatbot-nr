[
    {
        "id": "fb5738a77d24f8d4",
        "type": "tab",
        "label": "Settings",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e02fb78e674d1e65",
        "type": "tab",
        "label": "Bot",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "375d5c966656b361",
        "type": "tab",
        "label": "Links",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "af0e239fff0b28cb",
        "type": "group",
        "z": "fb5738a77d24f8d4",
        "name": "Credentials",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "8ecbfc06bc9f14e6",
            "546fccd91bd0c1fe",
            "56b615fdae6f5b7a",
            "7b18f9005dfed6d8",
            "2947b0da37b1b5bf",
            "4794739f0ca7f4d4",
            "4f4297eea101504b",
            "54d3949016ccd055",
            "70fa563524bce094",
            "22ca0fc049e4fb3a",
            "9e2c5ec10d494689",
            "57ec30d9da3742eb",
            "f3f0cea32f89e7ca",
            "b35713f8d22c2279"
        ],
        "x": 14,
        "y": 679,
        "w": 852,
        "h": 322
    },
    {
        "id": "7a97228176a3408a",
        "type": "group",
        "z": "fb5738a77d24f8d4",
        "name": "CRUD Avatars",
        "style": {
            "fill": "#bfdbef",
            "label": true
        },
        "nodes": [
            "43bfe33e6a378328",
            "a298efd64088f5a0",
            "39802f352be3083e",
            "6e7b6a07eb0c5dc0",
            "b570594b2c92e3c0",
            "7df0f57e8cdeae4e",
            "a92395d2a0030b41",
            "aa1e0752d37c7b39",
            "f7641d49ab6ba0e4",
            "96b5ed9783a4a440",
            "4376972e7209e2ec",
            "7fe216677821ddd5",
            "444098b8562acd7b",
            "5862302fb38e1d7a",
            "000c2b03b0dfc19e",
            "a84dd7f56aa89c8d",
            "df170f6c217565e6",
            "6c7d66aa5c729d7b",
            "e1a4a227148090a8",
            "25fbfab556855406",
            "e9ce8608103ec97e",
            "fd461c4712717168",
            "30de89d5e717300e",
            "9e39125f5b5c48b0",
            "d07e739dc286aac7",
            "4ad2a750cf4f64b2",
            "d39f6c4f02a963e8",
            "752d3c0fb683bc3d",
            "ea4ce5a83de83e99",
            "3c70fd4e37af8b4f",
            "11c43033edb6814f",
            "e12d1cc87a6fa9be",
            "cd45a3915eb3e765",
            "9495f99fe09e751a",
            "f1e2d789a1a7b92f",
            "fdd8a17f7ca948d1",
            "ed6187075b52d3e1",
            "44d601641c19f080",
            "03d1b6dbc51ce0d7",
            "122575676cab76ca",
            "7c5a9a2c9bcff740",
            "93ace29d77f702db",
            "35382b479daaa177"
        ],
        "x": 14,
        "y": 19,
        "w": 1632,
        "h": 502
    },
    {
        "id": "f168eeb2f9b6dc07",
        "type": "mongodb",
        "hostname": "${VIDEOAIDB-MONGO-HOST-NAME}",
        "topology": "direct",
        "connectOptions": "authSource=admin",
        "port": "27017",
        "db": "${VIDEOAIDB-MONGO-DB-NAME}",
        "name": ""
    },
    {
        "id": "1ddc99a249e7e0da",
        "type": "telegram bot",
        "botname": "{global.get('botCredential').botName}",
        "usernames": "",
        "chatids": "",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksprotocol": "socks5",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "43bfe33e6a378328",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "deleteAvatarById",
        "func": "msg.collection = 'avatars';\nmsg.query = {\n    _id: objectid(msg.payload._id)\n}\ndelete msg.payload._id\nmsg.payload = {\n    $set: {\n        deleted: true\n    }\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 370,
        "y": 420,
        "wires": [
            [
                "39802f352be3083e"
            ]
        ]
    },
    {
        "id": "a298efd64088f5a0",
        "type": "http in",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "url": "/deleteAvatar",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 148.119140625,
        "y": 418.875,
        "wires": [
            [
                "43bfe33e6a378328"
            ]
        ]
    },
    {
        "id": "39802f352be3083e",
        "type": "link call",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "links": [
            "4858d251cc2afe5c"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 560,
        "y": 420,
        "wires": [
            [
                "6e7b6a07eb0c5dc0"
            ]
        ]
    },
    {
        "id": "6e7b6a07eb0c5dc0",
        "type": "http response",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 710,
        "y": 420,
        "wires": []
    },
    {
        "id": "b570594b2c92e3c0",
        "type": "http in",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "url": "/uploadAvatar",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 150,
        "y": 60,
        "wires": [
            [
                "7df0f57e8cdeae4e"
            ]
        ]
    },
    {
        "id": "7df0f57e8cdeae4e",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "write file into buffer",
        "func": "msg.buffer = msg.req.files[0].buffer\nmsg.path = `/data/storage/avatar/${msg.req.files[0].originalname}`\nmsg.payload = msg.req.files[0].buffer\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 60,
        "wires": [
            [
                "a92395d2a0030b41"
            ]
        ]
    },
    {
        "id": "a92395d2a0030b41",
        "type": "file",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "filename": "path",
        "filenameType": "msg",
        "appendNewline": false,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 560,
        "y": 60,
        "wires": [
            [
                "f7641d49ab6ba0e4"
            ]
        ]
    },
    {
        "id": "aa1e0752d37c7b39",
        "type": "http response",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1270,
        "y": 60,
        "wires": []
    },
    {
        "id": "f7641d49ab6ba0e4",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "create avatar object",
        "func": "msg.collection = 'avatars';\n\nconst thumbnail_url = `${env.get(\"NODEREDURL\")}/downloadAvatar?avatar=${msg.req.files[0].originalname}`;\nlet avatar = { \n    createdAt: Date.now(),\n    presenter_id: objectid(), \n    thumbnail_url,\n    source: \"user\",\n    selected:false,\n    deleted: false };\nmsg.payload = avatar;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 760,
        "y": 60,
        "wires": [
            [
                "96b5ed9783a4a440"
            ]
        ]
    },
    {
        "id": "8ecbfc06bc9f14e6",
        "type": "http in",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "",
        "url": "/saveCredentials",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 720,
        "wires": [
            [
                "70fa563524bce094"
            ]
        ]
    },
    {
        "id": "546fccd91bd0c1fe",
        "type": "http response",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "response credentials",
        "statusCode": "",
        "headers": {},
        "x": 720,
        "y": 720,
        "wires": []
    },
    {
        "id": "56b615fdae6f5b7a",
        "type": "http in",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "",
        "url": "/getCredentials",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 800,
        "wires": [
            [
                "7b18f9005dfed6d8"
            ]
        ]
    },
    {
        "id": "7b18f9005dfed6d8",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "sortCredentials",
        "func": "msg.collection = 'credentials';\nmsg.payload = {};\nmsg.sort = { '_id': -1 };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 800,
        "wires": [
            [
                "4f4297eea101504b"
            ]
        ]
    },
    {
        "id": "2947b0da37b1b5bf",
        "type": "http response",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 790,
        "y": 800,
        "wires": []
    },
    {
        "id": "4794739f0ca7f4d4",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "getLastCredential",
        "func": "\nif (msg.payload.length > 0) {\n    msg.payload = msg.payload[0];\n} else {\n    msg.payload = {\n        \"_id\": '',\n        \"botName\": '',\n        \"botToken\": '',\n        \"openAIKey\": '',\n        \"elevenlabsKey\": '',\n        \"elevenlabsVoice\": '',\n        \"d_idKey\": '',\n        \"d_idAvatar\": '',\n        \"prompt\": '',\n        \"greetings\": ''\n    \n    }\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 800,
        "wires": [
            [
                "2947b0da37b1b5bf"
            ]
        ]
    },
    {
        "id": "4f4297eea101504b",
        "type": "link call",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "",
        "links": [
            "2ea4d611b4476b64"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 470,
        "y": 800,
        "wires": [
            [
                "4794739f0ca7f4d4"
            ]
        ]
    },
    {
        "id": "54d3949016ccd055",
        "type": "link call",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "",
        "links": [
            "850f26bd11c45c81"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 520,
        "y": 720,
        "wires": [
            [
                "546fccd91bd0c1fe"
            ]
        ]
    },
    {
        "id": "70fa563524bce094",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "setCollection",
        "func": "msg.collection = 'credentials';\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 720,
        "wires": [
            [
                "54d3949016ccd055"
            ]
        ]
    },
    {
        "id": "22ca0fc049e4fb3a",
        "type": "complete",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "",
        "scope": [
            "546fccd91bd0c1fe"
        ],
        "uncaught": false,
        "x": 110,
        "y": 880,
        "wires": [
            [
                "57ec30d9da3742eb"
            ]
        ]
    },
    {
        "id": "9e2c5ec10d494689",
        "type": "inject",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 960,
        "wires": [
            [
                "57ec30d9da3742eb"
            ]
        ]
    },
    {
        "id": "57ec30d9da3742eb",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "getLastCredential",
        "func": "msg.collection = 'credentials';\nmsg.payload = {};\nmsg.sort = { '_id': -1 };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 920,
        "wires": [
            [
                "b35713f8d22c2279"
            ]
        ]
    },
    {
        "id": "f3f0cea32f89e7ca",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "saveCurentCredentialToGlobal",
        "func": "const data = msg.payload[0];\n\nlet process_env = {\n    \"_id\": data._id,\n    \"botName\": data.botName ? data.botName.trim() : '',\n    \"botToken\": data.botToken ? data.botToken.trim() : '',\n    \"openAIKey\": data.openAIKey ? data.openAIKey.trim() : '',\n    \"elevenlabsKey\": data.elevenlabsKey ? data.elevenlabsKey.trim() : '',\n    \"elevenlabsVoice\": data.elevenlabsVoice ? data.elevenlabsVoice.trim() : '',\n    \"d_idKey\": data.d_idKey ? data.d_idKey.trim() : '',\n    \"d_idAvatar\": data.d_idAvatar ? data.d_idAvatar.trim() : '',\n    \"prompt\": data.prompt ? data.prompt.trim() : '',\n    \"greetings\": data.greetings ? data.greetings.trim() : ''\n}\n\nglobal.set(\"botCredential\", process_env);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "b35713f8d22c2279",
        "type": "link call",
        "z": "fb5738a77d24f8d4",
        "g": "af0e239fff0b28cb",
        "name": "",
        "links": [
            "2ea4d611b4476b64"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 490,
        "y": 920,
        "wires": [
            [
                "f3f0cea32f89e7ca"
            ]
        ]
    },
    {
        "id": "96b5ed9783a4a440",
        "type": "link call",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "links": [
            "850f26bd11c45c81"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 940,
        "y": 60,
        "wires": [
            [
                "4376972e7209e2ec"
            ]
        ]
    },
    {
        "id": "4376972e7209e2ec",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "return avatar",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1110,
        "y": 60,
        "wires": [
            [
                "aa1e0752d37c7b39"
            ]
        ]
    },
    {
        "id": "7fe216677821ddd5",
        "type": "http in",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "url": "/getAllAvatars",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 300,
        "wires": [
            [
                "6c7d66aa5c729d7b"
            ]
        ]
    },
    {
        "id": "444098b8562acd7b",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "fetchActors",
        "func": "msg.collection = 'avatars';\nconst BASE_URL = \"https://api.d-id.com/clips/presenters\";\nconst key = msg.payload.key;\n\nmsg.headers = {\n    \"accept\": \"application/json\",\n    \"Authorization\": `Bearer  ${key}`\n}\nmsg.method = \"GET\";\n\nmsg.url = `${BASE_URL}`;\n\n\nmsg.payload = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 330,
        "y": 240,
        "wires": [
            [
                "000c2b03b0dfc19e"
            ]
        ]
    },
    {
        "id": "5862302fb38e1d7a",
        "type": "http response",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1570,
        "y": 200,
        "wires": []
    },
    {
        "id": "000c2b03b0dfc19e",
        "type": "http request",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 510,
        "y": 240,
        "wires": [
            [
                "a84dd7f56aa89c8d"
            ]
        ]
    },
    {
        "id": "a84dd7f56aa89c8d",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "checkExistenceActorsInDb",
        "func": "if (msg.statusCode == 200) {\n    let presenters=msg.payload.presenters;\n    let actors = presenters.map(presenter => {\n        // Витягуємо необхідні дані для створення об'єкта actor\n        let { presenter_id, thumbnail_url } = presenter;\n\n        // Створюємо об'єкт actor\n        return {\n            createdAt: Date.now(),\n            presenter_id,\n            thumbnail_url,\n            source: \"d_id\",\n            selected: false,\n            deleted: false\n        };\n    });\n    msg.actors = actors;\n    // Записуємо actors в msg.payload\n    msg.payload = {\n        presenter_id: { $in: msg.actors.map(actor => actor.presenter_id) }\n    }\n   return msg;\n} else {\n    msg.payload = {\n        type: 'message',\n        content: \"ERROR. Sorry, something went wrong 😞\",\n       \n    }\n\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 240,
        "wires": [
            [
                "cd45a3915eb3e765"
            ]
        ]
    },
    {
        "id": "df170f6c217565e6",
        "type": "http in",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "url": "/getActors",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 240,
        "wires": [
            [
                "444098b8562acd7b"
            ]
        ]
    },
    {
        "id": "6c7d66aa5c729d7b",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "sort Avatars",
        "func": "msg.collection = 'avatars';\nmsg.payload = {\n    deleted: false\n};\nmsg.sort = { 'createdAt': -1 };\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 300,
        "wires": [
            [
                "25fbfab556855406"
            ]
        ]
    },
    {
        "id": "e1a4a227148090a8",
        "type": "http response",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 870,
        "y": 300,
        "wires": []
    },
    {
        "id": "25fbfab556855406",
        "type": "link call",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "links": [
            "2ea4d611b4476b64"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 510,
        "y": 300,
        "wires": [
            [
                "122575676cab76ca"
            ]
        ]
    },
    {
        "id": "e9ce8608103ec97e",
        "type": "inject",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 360,
        "wires": [
            [
                "6c7d66aa5c729d7b"
            ]
        ]
    },
    {
        "id": "fd461c4712717168",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "checkExisting",
        "func": "if (msg.payload.avatar !== \"\" && msg.payload.avatar !== \"null\" && msg.payload.avatar !== undefined && msg.payload.avatar !== \"undefined\"){\n    return [msg,null]\n}else{\n    return [null,msg]\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 140,
        "wires": [
            [
                "9e39125f5b5c48b0"
            ],
            [
                "d07e739dc286aac7"
            ]
        ]
    },
    {
        "id": "30de89d5e717300e",
        "type": "http in",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "url": "/downloadAvatar",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 140,
        "wires": [
            [
                "fd461c4712717168"
            ]
        ]
    },
    {
        "id": "9e39125f5b5c48b0",
        "type": "delay",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 485,
        "y": 120,
        "wires": [
            [
                "4ad2a750cf4f64b2"
            ]
        ],
        "l": false
    },
    {
        "id": "d07e739dc286aac7",
        "type": "http response",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 530,
        "y": 180,
        "wires": []
    },
    {
        "id": "4ad2a750cf4f64b2",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "initPath",
        "func": "\nmsg.filename = `/data/storage/avatar/${msg.payload.avatar}`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 120,
        "wires": [
            [
                "d39f6c4f02a963e8"
            ]
        ]
    },
    {
        "id": "d39f6c4f02a963e8",
        "type": "file in",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "filename": "filename",
        "filenameType": "msg",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 740,
        "y": 120,
        "wires": [
            [
                "752d3c0fb683bc3d"
            ]
        ]
    },
    {
        "id": "752d3c0fb683bc3d",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "getFile",
        "func": "msg.headers = {\n    'Content-Type': 'image/*',\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 120,
        "wires": [
            [
                "ea4ce5a83de83e99"
            ]
        ]
    },
    {
        "id": "ea4ce5a83de83e99",
        "type": "http response",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1030,
        "y": 120,
        "wires": []
    },
    {
        "id": "c68c75fac53ea377",
        "type": "inject",
        "z": "fb5738a77d24f8d4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 600,
        "wires": [
            [
                "582a6268302445b6"
            ]
        ]
    },
    {
        "id": "582a6268302445b6",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "name": "deleteAvatarsCollection",
        "func": "msg.collection = 'avatars';\nmsg.payload= {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 600,
        "wires": [
            [
                "e7020a361461f03a"
            ]
        ]
    },
    {
        "id": "e7020a361461f03a",
        "type": "mongodb out",
        "z": "fb5738a77d24f8d4",
        "mongodb": "f168eeb2f9b6dc07",
        "name": "",
        "collection": "avatars",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 750,
        "y": 600,
        "wires": []
    },
    {
        "id": "3c70fd4e37af8b4f",
        "type": "inject",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 200,
        "wires": [
            [
                "444098b8562acd7b"
            ]
        ]
    },
    {
        "id": "11c43033edb6814f",
        "type": "link call",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "links": [
            "850f26bd11c45c81"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1260,
        "y": 200,
        "wires": [
            [
                "e12d1cc87a6fa9be"
            ]
        ]
    },
    {
        "id": "e12d1cc87a6fa9be",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "return actors",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1410,
        "y": 200,
        "wires": [
            [
                "5862302fb38e1d7a"
            ]
        ]
    },
    {
        "id": "cd45a3915eb3e765",
        "type": "link call",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "links": [
            "2ea4d611b4476b64"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 950,
        "y": 240,
        "wires": [
            [
                "9495f99fe09e751a"
            ]
        ]
    },
    {
        "id": "9495f99fe09e751a",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "condition",
        "func": "if (msg.payload.length > 0) {\n    msg.statusCode = 200;\n    return [null, msg]\n} else {\n    msg.payload = msg.actors\n    return [msg, null]\n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 240,
        "wires": [
            [
                "11c43033edb6814f"
            ],
            [
                "f1e2d789a1a7b92f"
            ]
        ]
    },
    {
        "id": "f1e2d789a1a7b92f",
        "type": "http response",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1250,
        "y": 260,
        "wires": []
    },
    {
        "id": "fdd8a17f7ca948d1",
        "type": "http in",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "url": "/selectAvatar",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 480,
        "wires": [
            [
                "44d601641c19f080"
            ]
        ]
    },
    {
        "id": "ed6187075b52d3e1",
        "type": "http response",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1070,
        "y": 480,
        "wires": []
    },
    {
        "id": "44d601641c19f080",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "setSelectedTrue",
        "func": "msg.collection = 'avatars';\n\nmsg.query = {\n    _id: objectid(msg.payload._id)\n};\nmsg.target = {\n    _id: objectid(msg.payload._id)\n};\n\nmsg.payload = {\n    $set: {\n        selected: true\n    }\n};\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 360,
        "y": 480,
        "wires": [
            [
                "03d1b6dbc51ce0d7"
            ]
        ]
    },
    {
        "id": "03d1b6dbc51ce0d7",
        "type": "link call",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "links": [
            "4858d251cc2afe5c"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 540,
        "y": 480,
        "wires": [
            [
                "93ace29d77f702db"
            ]
        ]
    },
    {
        "id": "122575676cab76ca",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "returnStatusCode",
        "func": "if (msg.payload.length > 0) {\n    msg.statusCode = 200;\n    return [msg, null]\n} else {\n    return [null, msg]\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 300,
        "wires": [
            [
                "e1a4a227148090a8",
                "7c5a9a2c9bcff740"
            ]
        ]
    },
    {
        "id": "7c5a9a2c9bcff740",
        "type": "debug",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 360,
        "wires": []
    },
    {
        "id": "93ace29d77f702db",
        "type": "function",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "setSelectedFalse",
        "func": "msg.multi = true;\nmsg.upsert = false;\nmsg.query = {\n    _id: { $ne: objectid(msg.target._id) } // Всі, крім обраного об'єкта\n};\nmsg.payload = {\n    $set: {\n        selected: false\n    }\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 730,
        "y": 480,
        "wires": [
            [
                "35382b479daaa177"
            ]
        ]
    },
    {
        "id": "35382b479daaa177",
        "type": "link call",
        "z": "fb5738a77d24f8d4",
        "g": "7a97228176a3408a",
        "name": "",
        "links": [
            "4858d251cc2afe5c"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 920,
        "y": 480,
        "wires": [
            [
                "ed6187075b52d3e1"
            ]
        ]
    },
    {
        "id": "3d3e56ba0f1cc91a",
        "type": "telegram command",
        "z": "e02fb78e674d1e65",
        "name": "",
        "command": "/start",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "1ddc99a249e7e0da",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 70,
        "y": 80,
        "wires": [
            [
                "9add7abe9a8f304d"
            ],
            []
        ]
    },
    {
        "id": "263b65748b561067",
        "type": "function",
        "z": "e02fb78e674d1e65",
        "name": "startMessage",
        "func": "msg.fromDB = msg.payload;\n\nconst startMessage = global.get('botCredential').greetings;\nconst firstMessage = `${startMessage}\n\nHow do you want to communicate?`;\nconst opts = {\n    reply_markup: JSON.stringify({\n        \"inline_keyboard\": [[\n            { \"text\": \"⌨️ Text\", \"callback_data\": \"/text\" },\n            { \"text\": \"🎤 Voice\", \"callback_data\": \"/voice\" },\n            { \"text\": \"🎬 Video\", \"callback_data\": \"/video\" }\n        ]]\n    })\n};\n\nmsg.payload = {\n    type: 'message',\n    content: firstMessage,\n    chatId: msg.telegram.chatId,\n    options: opts,\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 80,
        "wires": [
            [
                "513680f071560cb4",
                "fcecf60a9f835603"
            ]
        ]
    },
    {
        "id": "513680f071560cb4",
        "type": "telegram sender",
        "z": "e02fb78e674d1e65",
        "name": "",
        "bot": "1ddc99a249e7e0da",
        "haserroroutput": false,
        "outputs": 1,
        "x": 700,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "c9495559c50237fe",
        "type": "function",
        "z": "e02fb78e674d1e65",
        "name": "switchCommunicationMethod",
        "func": "msg.telegram = msg.payload;\nmsg.communicationMethod = null;\n\nlet content = null;\nlet message = null;\nswitch (msg.payload.content || msg.originalMessage.text) {\n    case '/text': {\n        \n        msg.communicationMethod = 'TEXT';\n        content = '⌨️ Switched to text mode';\n       break;\n    }\n    case '/voice': {\n        \n        msg.communicationMethod = 'VOICE';\n        content = '🎤 Switched to voice mode';\n        break;\n    }\n    case '/video': {\n        \n        msg.communicationMethod = 'VIDEO';\n        content = '🎬 Switched to video mode';\n        break;\n    }\n    default:\n        content = 'The communication method is not selected!';\n        break;\n}\n\nmsg.payload = {\n    type: 'message',\n    content: content,\n    chatId: msg.telegram.chatId,\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 300,
        "wires": [
            [
                "3a8bd55cd2a4243b",
                "128490b61a4a477f"
            ]
        ]
    },
    {
        "id": "3a8bd55cd2a4243b",
        "type": "telegram sender",
        "z": "e02fb78e674d1e65",
        "name": "",
        "bot": "1ddc99a249e7e0da",
        "haserroroutput": false,
        "outputs": 1,
        "x": 600,
        "y": 240,
        "wires": [
            [
                "e2e1de0d5af2a353"
            ]
        ]
    },
    {
        "id": "128490b61a4a477f",
        "type": "function",
        "z": "e02fb78e674d1e65",
        "name": "setCommunicationMethodToMongo",
        "func": "const userId = msg.payload.chatId;\n\nmsg.collection = 'chatUsers';\nmsg.query = {\n    userId\n}\nmsg.payload = {\n    $set: {\n        communicationMethod: msg.communicationMethod\n    }\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 300,
        "wires": [
            [
                "6ab210ce151e9838"
            ]
        ]
    },
    {
        "id": "0c37bd1c43a47a20",
        "type": "telegram event",
        "z": "e02fb78e674d1e65",
        "name": "eventListener",
        "bot": "1ddc99a249e7e0da",
        "event": "callback_query",
        "autoanswer": false,
        "x": 90,
        "y": 200,
        "wires": [
            [
                "c9495559c50237fe"
            ]
        ]
    },
    {
        "id": "6ab210ce151e9838",
        "type": "link call",
        "z": "e02fb78e674d1e65",
        "name": "",
        "links": [
            "4858d251cc2afe5c"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 960,
        "y": 300,
        "wires": [
            [
                "f5afe07d0efbe953"
            ]
        ]
    },
    {
        "id": "3371cdaf874ff729",
        "type": "telegram command",
        "z": "e02fb78e674d1e65",
        "name": "",
        "command": "/text",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "1ddc99a249e7e0da",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 70,
        "y": 260,
        "wires": [
            [
                "c9495559c50237fe"
            ],
            []
        ]
    },
    {
        "id": "f89e6a1fb1cf6f49",
        "type": "telegram command",
        "z": "e02fb78e674d1e65",
        "name": "",
        "command": "/voice",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "1ddc99a249e7e0da",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 70,
        "y": 320,
        "wires": [
            [
                "c9495559c50237fe"
            ],
            []
        ]
    },
    {
        "id": "5f294c3817e54d49",
        "type": "telegram command",
        "z": "e02fb78e674d1e65",
        "name": "",
        "command": "/video",
        "description": "",
        "registercommand": false,
        "language": "",
        "scope": "default",
        "bot": "1ddc99a249e7e0da",
        "strict": false,
        "hasresponse": true,
        "useregex": false,
        "removeregexcommand": false,
        "outputs": 2,
        "x": 70,
        "y": 380,
        "wires": [
            [
                "c9495559c50237fe"
            ],
            []
        ]
    },
    {
        "id": "2744f62931712fa4",
        "type": "link call",
        "z": "e02fb78e674d1e65",
        "name": "",
        "links": [
            "2ea4d611b4476b64"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 450,
        "y": 80,
        "wires": [
            [
                "263b65748b561067"
            ]
        ]
    },
    {
        "id": "9add7abe9a8f304d",
        "type": "function",
        "z": "e02fb78e674d1e65",
        "name": "checkChatUserExist",
        "func": "msg.collection = 'chatUsers';\n\nmsg.telegram = msg.payload;\n\nmsg.payload = {\n    userId: msg.telegram.chatId,\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 80,
        "wires": [
            [
                "2744f62931712fa4"
            ]
        ]
    },
    {
        "id": "fcecf60a9f835603",
        "type": "function",
        "z": "e02fb78e674d1e65",
        "name": "setChatUsers",
        "func": "if (msg.fromDB.length === 0) {\n    msg.collection = 'chatUsers';\n    msg.payload = {\n        userId: msg.telegram.chatId,\n    }\n\n    return msg;\n} \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 80,
        "wires": [
            [
                "f59dc077383da8f0"
            ]
        ]
    },
    {
        "id": "f59dc077383da8f0",
        "type": "link call",
        "z": "e02fb78e674d1e65",
        "name": "",
        "links": [
            "850f26bd11c45c81"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 1000,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "6825ad0924bc089c",
        "type": "telegram receiver",
        "z": "e02fb78e674d1e65",
        "name": "",
        "bot": "1ddc99a249e7e0da",
        "saveDataDir": "",
        "filterCommands": true,
        "x": 100,
        "y": 500,
        "wires": [
            [
                "7e8bf6b052d607d2"
            ],
            []
        ]
    },
    {
        "id": "494f733c48552c0e",
        "type": "telegram sender",
        "z": "e02fb78e674d1e65",
        "name": "",
        "bot": "1ddc99a249e7e0da",
        "haserroroutput": false,
        "outputs": 1,
        "x": 920,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "0cb89979157781f2",
        "type": "function",
        "z": "e02fb78e674d1e65",
        "name": "chooseMethod or questionToAI",
        "func": "msg.userData = {\n    ...msg.payload[0],\n    chatId: msg.telegram.chatId,\n}\n\nif (msg.userData.communicationMethod == null ||\n    msg.userData.communicationMethod == undefined) {\n\n    const opts = {\n        reply_markup: JSON.stringify({\n            \"inline_keyboard\": [[\n                { \"text\": \"⌨️ Text\", \"callback_data\": \"/text\" },\n                { \"text\": \"🎤 Voice\", \"callback_data\": \"/voice\" },\n                { \"text\": \"🎬 Video\", \"callback_data\": \"/video\" }\n            ]]\n        })\n    };\n\n    msg.payload = {\n        type: 'message',\n        content: 'Please, choose the method of communication',\n        chatId: msg.telegram.chatId,\n        options: opts,\n    }\n\n    return [msg, null];\n}\n\nconst botCredential = global.get('botCredential');\n\nmsg.OPENAI_API_KEY = botCredential.openAIKey;\nmsg.prompt = botCredential.prompt;\nmsg.messages = [\n    { \"role\": \"system\", \"content\": botCredential.prompt },\n    { \"role\": \"user\", \"content\": msg.telegram.content }\n];\n\nreturn [null, msg];\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 500,
        "wires": [
            [
                "494f733c48552c0e"
            ],
            [
                "3bd33f5fa8c96173"
            ]
        ]
    },
    {
        "id": "dd1a26676b4bba46",
        "type": "function",
        "z": "e02fb78e674d1e65",
        "name": "generateVoice",
        "func": "const voice_id = global.get('botCredential').elevenlabsVoice;\nconst content = msg.payload.choices[0].message.content;\nconst key = global.get('botCredential').elevenlabsKey;\n\nmsg.url = `https://api.elevenlabs.io/v1/text-to-speech/${voice_id}`;\nmsg.method = 'POST';\nmsg.headers = {\n    'Content-Type': 'application/json',\n    'xi-api-key': key\n};\n\nmsg.payload = {\n    text: content,\n    voice_settings: {\n        \"similarity_boost\": 1,\n        \"stability\": 1,\n        \"use_speaker_boost\": true\n    }\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 680,
        "wires": [
            [
                "90b6dc660cf7fcf4"
            ]
        ]
    },
    {
        "id": "d25239f8d1130886",
        "type": "telegram sender",
        "z": "e02fb78e674d1e65",
        "name": "",
        "bot": "1ddc99a249e7e0da",
        "haserroroutput": false,
        "outputs": 1,
        "x": 960,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "90b6dc660cf7fcf4",
        "type": "http request",
        "z": "e02fb78e674d1e65",
        "name": "",
        "method": "use",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 630,
        "y": 680,
        "wires": [
            [
                "d70b63808f185072"
            ]
        ]
    },
    {
        "id": "d70b63808f185072",
        "type": "function",
        "z": "e02fb78e674d1e65",
        "name": "statusCode",
        "func": "if (msg.statusCode == 200) {\n    msg.payload = {\n        type: 'voice',\n        content: msg.payload,\n        chatId: msg.userData.chatId\n    }\n\n    return msg;\n} else {\n    msg.payload = {\n        type: 'message',\n        content: \"ERROR. Sorry, something went wrong 😞\",\n        chatId: msg.userData.chatId\n    }\n\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 680,
        "wires": [
            [
                "d25239f8d1130886"
            ]
        ]
    },
    {
        "id": "7e8bf6b052d607d2",
        "type": "function",
        "z": "e02fb78e674d1e65",
        "name": "getUserLastData",
        "func": "msg.collection = 'chatUsers';\nmsg.telegram = msg.payload;\n\nmsg.payload = {\n    userId: msg.payload.chatId,\n};\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 500,
        "wires": [
            [
                "305391eadaa8f1f8"
            ]
        ]
    },
    {
        "id": "305391eadaa8f1f8",
        "type": "link call",
        "z": "e02fb78e674d1e65",
        "name": "",
        "links": [
            "2ea4d611b4476b64"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 470,
        "y": 500,
        "wires": [
            [
                "0cb89979157781f2"
            ]
        ]
    },
    {
        "id": "3bd33f5fa8c96173",
        "type": "openai-ubos",
        "z": "e02fb78e674d1e65",
        "name": "",
        "model": "gpt-3.5-turbo",
        "temperature": 0.5,
        "max_tokens": 60,
        "prompt": "",
        "frequency_penalty": 0,
        "presence_penalty": 0,
        "top_p": 1,
        "stop": {
            "type": "json",
            "value": "[]"
        },
        "OPENAI_API_KEY": "",
        "x": 920,
        "y": 540,
        "wires": [
            [
                "7da34e585b2888b2"
            ]
        ]
    },
    {
        "id": "ef1c1d5552df1694",
        "type": "debug",
        "z": "e02fb78e674d1e65",
        "d": true,
        "name": "from CommunicationMethod switch",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 230,
        "y": 820,
        "wires": []
    },
    {
        "id": "e73c1e7f1e32ae64",
        "type": "inject",
        "z": "e02fb78e674d1e65",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 140,
        "wires": [
            [
                "37dcda71d8d1fd06"
            ]
        ]
    },
    {
        "id": "37dcda71d8d1fd06",
        "type": "function",
        "z": "e02fb78e674d1e65",
        "name": "deleteAvatarsCollection",
        "func": "msg.collection = 'chatUsers';\nmsg.payload= {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 140,
        "wires": [
            [
                "01223bc821fa3974"
            ]
        ]
    },
    {
        "id": "01223bc821fa3974",
        "type": "mongodb out",
        "z": "e02fb78e674d1e65",
        "mongodb": "f168eeb2f9b6dc07",
        "name": "",
        "collection": "chatUsers",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 920,
        "y": 140,
        "wires": []
    },
    {
        "id": "1774755670398181",
        "type": "function",
        "z": "e02fb78e674d1e65",
        "name": "generateVideoWithUserAvatar",
        "func": "const BASE_URL = \"https://api.d-id.com/talks\";\nconst content = msg.response[0].message.content;\nconst key = global.get('botCredential').d_idKey;\nconst voice = global.get('botCredential').elevenlabsVoice;\nconst avatar = \"https://create-images-results.d-id.com/auth0%7C64ca6de76577cde55e298d46/upl_PognRAQJIfSk1dM0t7EGL/image.jpeg\";\n\nmsg.method = 'POST';\nmsg.headers = {\n    'Content-Type': 'application/json',\n    \"accept\": \"application/json\",\n    \"Authorization\": `Basic ${key}`\n};\nmsg.url = `${BASE_URL}`;\nmsg.payload = {\n    \"script\": {\n        \"type\": \"text\",\n        \"provider\": { \"type\": 'elevenlabs', \"voice_id\": voice },\n        \"input\": content\n    },\n    \"config\": { \"result_format\": 'mp4', \"stitch\": true },\n    \"source_url\": avatar,\n    \"user_data\": JSON.stringify(msg.telegram.chatId),\n    \"webhook\": `${env.get(\"NODEREDURL\")}/webhook`,\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 740,
        "wires": [
            [
                "73e9d2b90c653da4",
                "ba5d465b29f3fa2d"
            ]
        ]
    },
    {
        "id": "b9e11a67a003a7f1",
        "type": "telegram sender",
        "z": "e02fb78e674d1e65",
        "name": "",
        "bot": "1ddc99a249e7e0da",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1500,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "ba5d465b29f3fa2d",
        "type": "http request",
        "z": "e02fb78e674d1e65",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1170,
        "y": 740,
        "wires": [
            [
                "37cda1813d2152f7",
                "8bf2a0d6c48175ac"
            ]
        ]
    },
    {
        "id": "37cda1813d2152f7",
        "type": "function",
        "z": "e02fb78e674d1e65",
        "name": "statusCode",
        "func": "if (msg.statusCode == 201) {\n    msg.clip = msg.payload;\n    msg.payload = {\n        type: 'message',\n        content: 'the video is being processed, you need to wait a bit...',\n        chatId: msg.userData.chatId\n    }\n\n    return msg;\n} else {\n    msg.payload = {\n        type: 'message',\n        content: \"ERROR. Sorry, something went wrong 😞\",\n        chatId: msg.userData.chatId\n    }\n\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 740,
        "wires": [
            [
                "b9e11a67a003a7f1"
            ]
        ]
    },
    {
        "id": "60e758bdcc29e6e9",
        "type": "function",
        "z": "e02fb78e674d1e65",
        "name": "findAvatar",
        "func": "msg.collection = 'avatars';\nmsg.response = msg.payload.choices;\nmsg.payload = {\n    deleted: false,\n    selected: true\n};\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 760,
        "wires": [
            [
                "efb05de0f2937f9c"
            ]
        ]
    },
    {
        "id": "efb05de0f2937f9c",
        "type": "link call",
        "z": "e02fb78e674d1e65",
        "name": "",
        "links": [
            "2ea4d611b4476b64"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 530,
        "y": 760,
        "wires": [
            [
                "3c25ab7e2f53a0b0",
                "2c0534bda7155768"
            ]
        ]
    },
    {
        "id": "abc581cd9b9b870f",
        "type": "function",
        "z": "e02fb78e674d1e65",
        "name": "generateVideoWithActor",
        "func": "const BASE_URL = \"https://api.d-id.com/clips\";\nconst content = msg.response[0].message.content;\nconst avatar = global.get('botCredential').d_idAvatar;\nconst key = global.get('botCredential').d_idKey;\nconst voice = global.get('botCredential').elevenlabsVoice;\n\nmsg.method = 'POST';\nmsg.headers = {\n    \"content-type\": 'application/json',\n    \"accept\": \"application/json\",\n    \"Authorization\": `Basic ${key}`\n};\n\nmsg.payload = {\n    \"script\": {\n        \"type\": 'text',\n        \"provider\": { \"type\": 'elevenlabs', \"voice_id\": voice },\n        \"input\": content\n    },\n    \"config\": { \"result_format\": 'mp4' },\n    \"presenter_id\": avatar,\n    \"user_data\": JSON.stringify(msg.telegram.chatId),\n    \"webhook\": `${env.get(\"NODEREDURL\")}/webhook`,\n    \"background\": {\n        \"color\": \"#fff\"\n    }\n}\nmsg.url = `${BASE_URL}`;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 800,
        "wires": [
            [
                "f626f326a1a94233",
                "d5fb326a99a8ce0f"
            ]
        ]
    },
    {
        "id": "a7dd2d5ef82e95ee",
        "type": "telegram sender",
        "z": "e02fb78e674d1e65",
        "name": "",
        "bot": "1ddc99a249e7e0da",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1500,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "d5fb326a99a8ce0f",
        "type": "http request",
        "z": "e02fb78e674d1e65",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1170,
        "y": 800,
        "wires": [
            [
                "553f27f322d99414",
                "8bf2a0d6c48175ac"
            ]
        ]
    },
    {
        "id": "553f27f322d99414",
        "type": "function",
        "z": "e02fb78e674d1e65",
        "name": "statusCode",
        "func": "if (msg.statusCode == 201) {\n    msg.clip = msg.payload;\n    msg.payload = {\n        type: 'message',\n        content: 'the video is being processed, you need to wait a bit...',\n        chatId: msg.userData.chatId\n    }\n\n    return msg;\n} else {\n    msg.payload = {\n        type: 'message',\n        content: \"ERROR. Sorry, something went wrong 😞\",\n        chatId: msg.userData.chatId\n    }\n\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 800,
        "wires": [
            [
                "a7dd2d5ef82e95ee"
            ]
        ]
    },
    {
        "id": "3c25ab7e2f53a0b0",
        "type": "switch",
        "z": "e02fb78e674d1e65",
        "name": "typeOfAvatar",
        "property": "payload[0].source",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "user",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "d_id",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 710,
        "y": 760,
        "wires": [
            [
                "1774755670398181"
            ],
            [
                "abc581cd9b9b870f"
            ]
        ]
    },
    {
        "id": "f5afe07d0efbe953",
        "type": "debug",
        "z": "e02fb78e674d1e65",
        "d": true,
        "name": "from setting communicationMethod",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1260,
        "y": 320,
        "wires": []
    },
    {
        "id": "4085fbb2bc7ec96e",
        "type": "function",
        "z": "e02fb78e674d1e65",
        "name": "secondMessage",
        "func": "\n   const message = `How can I assist you, ${msg.telegram.from.first_name} ?`;\n    \n   \n        msg.payload = {\n            type: 'message',\n            content: message,\n            chatId: msg.telegram.chatId,\n        }\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 240,
        "wires": [
            [
                "85d44fd30c929eca"
            ]
        ]
    },
    {
        "id": "85d44fd30c929eca",
        "type": "telegram sender",
        "z": "e02fb78e674d1e65",
        "name": "",
        "bot": "1ddc99a249e7e0da",
        "haserroroutput": false,
        "outputs": 1,
        "x": 1140,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "e2e1de0d5af2a353",
        "type": "delay",
        "z": "e02fb78e674d1e65",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 760,
        "y": 240,
        "wires": [
            [
                "4085fbb2bc7ec96e"
            ]
        ]
    },
    {
        "id": "7da34e585b2888b2",
        "type": "switch",
        "z": "e02fb78e674d1e65",
        "name": "",
        "property": "userData.communicationMethod",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "TEXT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VOICE",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "VIDEO",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 90,
        "y": 680,
        "wires": [
            [
                "ef1c1d5552df1694",
                "f67dcd4c092fb582"
            ],
            [
                "dd1a26676b4bba46",
                "ef1c1d5552df1694"
            ],
            [
                "60e758bdcc29e6e9",
                "ef1c1d5552df1694"
            ]
        ]
    },
    {
        "id": "73e9d2b90c653da4",
        "type": "debug",
        "z": "e02fb78e674d1e65",
        "name": "from Avatar",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 680,
        "wires": []
    },
    {
        "id": "f626f326a1a94233",
        "type": "debug",
        "z": "e02fb78e674d1e65",
        "name": "from Actor",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 860,
        "wires": []
    },
    {
        "id": "8bf2a0d6c48175ac",
        "type": "debug",
        "z": "e02fb78e674d1e65",
        "d": true,
        "name": "from request",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 680,
        "wires": []
    },
    {
        "id": "f67dcd4c092fb582",
        "type": "function",
        "z": "e02fb78e674d1e65",
        "name": "setupOpenAiReguest",
        "func": "msg.payload = {\n    type: 'message',\n    content: msg.payload.choices[0].message.content,\n    chatId: msg.userData.chatId\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 620,
        "wires": [
            [
                "e37323d9038eea78"
            ]
        ]
    },
    {
        "id": "e37323d9038eea78",
        "type": "telegram sender",
        "z": "e02fb78e674d1e65",
        "name": "",
        "bot": "1ddc99a249e7e0da",
        "haserroroutput": false,
        "outputs": 1,
        "x": 500,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "2b1c160de187a01c",
        "type": "http in",
        "z": "e02fb78e674d1e65",
        "name": "",
        "url": "/webhook",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 960,
        "wires": [
            [
                "b3d3be18f0522397",
                "555f3438022890c1",
                "d41469a92ec47721"
            ]
        ]
    },
    {
        "id": "555f3438022890c1",
        "type": "http response",
        "z": "e02fb78e674d1e65",
        "name": "ok",
        "statusCode": "201",
        "headers": {},
        "x": 270,
        "y": 920,
        "wires": []
    },
    {
        "id": "b3d3be18f0522397",
        "type": "debug",
        "z": "e02fb78e674d1e65",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 120,
        "y": 1020,
        "wires": []
    },
    {
        "id": "d41469a92ec47721",
        "type": "function",
        "z": "e02fb78e674d1e65",
        "name": "sendVideoToTelegram",
        "func": "if (msg.payload.status == 'done') {\n    msg.url = `https://api.telegram.org/bot${global.get('botCredential').botToken}/sendVideo`;\n    msg.headers = {\n        \"content-type\": \"application/json\"\n    }\n    msg.payload = {\n        video: `${msg.payload.result_url}/videos?filename=videoresponse&bred=s`,\n        chat_id: JSON.parse(msg.payload.user_data)\n    }\n\n    return [msg, null]\n} else {\n    msg.payload = {\n        type: 'message',\n        content: \"ERROR. Sorry, something went wrong 😞\",\n        chatId: JSON.parse(msg.payload.user_data)\n    }\n\n    return [null, msg]\n}\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 960,
        "wires": [
            [
                "68868b7d2c3dd751",
                "6ab013c176aec33d"
            ],
            [
                "63376bc55053557b",
                "6ab013c176aec33d"
            ]
        ]
    },
    {
        "id": "63376bc55053557b",
        "type": "telegram sender",
        "z": "e02fb78e674d1e65",
        "name": "",
        "bot": "1ddc99a249e7e0da",
        "haserroroutput": false,
        "outputs": 1,
        "x": 600,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "6ab013c176aec33d",
        "type": "debug",
        "z": "e02fb78e674d1e65",
        "d": true,
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 1020,
        "wires": []
    },
    {
        "id": "68868b7d2c3dd751",
        "type": "http request",
        "z": "e02fb78e674d1e65",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 590,
        "y": 940,
        "wires": [
            [
                "de82e78747a706ec"
            ]
        ]
    },
    {
        "id": "de82e78747a706ec",
        "type": "debug",
        "z": "e02fb78e674d1e65",
        "d": true,
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 940,
        "wires": []
    },
    {
        "id": "2c0534bda7155768",
        "type": "debug",
        "z": "e02fb78e674d1e65",
        "d": true,
        "name": "debug 13",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 840,
        "wires": []
    },
    {
        "id": "2db21c974a62c557",
        "type": "function",
        "z": "e02fb78e674d1e65",
        "name": "write file into buffer",
        "func": "\nmsg.fromApp = msg.payload\nmsg.url = msg.payload.result_url\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1180,
        "wires": [
            [
                "2532ee5e6a275b83",
                "24336a818102aa5d"
            ]
        ]
    },
    {
        "id": "9efa72156e56b3f6",
        "type": "http in",
        "z": "e02fb78e674d1e65",
        "name": "",
        "url": "/webhookTalks",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 120,
        "y": 1180,
        "wires": [
            [
                "2db21c974a62c557",
                "52db8779346dfc56"
            ]
        ]
    },
    {
        "id": "4a07dfe9b7167c51",
        "type": "inject",
        "z": "e02fb78e674d1e65",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1220,
        "wires": [
            [
                "2db21c974a62c557"
            ]
        ]
    },
    {
        "id": "52db8779346dfc56",
        "type": "debug",
        "z": "e02fb78e674d1e65",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 260,
        "y": 1120,
        "wires": []
    },
    {
        "id": "2532ee5e6a275b83",
        "type": "debug",
        "z": "e02fb78e674d1e65",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 1260,
        "wires": []
    },
    {
        "id": "24336a818102aa5d",
        "type": "http request",
        "z": "e02fb78e674d1e65",
        "name": "",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 530,
        "y": 1180,
        "wires": [
            [
                "1b9537ef7ff5760d",
                "22c85d8b129803b5"
            ]
        ]
    },
    {
        "id": "1b9537ef7ff5760d",
        "type": "function",
        "z": "e02fb78e674d1e65",
        "name": "function 1",
        "func": "\nmsg.payload = {\n    content: msg.payload,\n    type:\"video_note\",\n    chatId: msg.fromApp.user_data\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 1180,
        "wires": [
            [
                "74e00fa7086484e0",
                "39a86dfd752ee1c1"
            ]
        ]
    },
    {
        "id": "74e00fa7086484e0",
        "type": "telegram sender",
        "z": "e02fb78e674d1e65",
        "name": "",
        "bot": "1ddc99a249e7e0da",
        "haserroroutput": true,
        "outputs": 2,
        "x": 880,
        "y": 1180,
        "wires": [
            [
                "0f7c870cbc1b40d1"
            ],
            [
                "0f7c870cbc1b40d1"
            ]
        ]
    },
    {
        "id": "0f7c870cbc1b40d1",
        "type": "debug",
        "z": "e02fb78e674d1e65",
        "name": "debug 23",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 1180,
        "wires": []
    },
    {
        "id": "22c85d8b129803b5",
        "type": "debug",
        "z": "e02fb78e674d1e65",
        "name": "debug 24",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 1120,
        "wires": []
    },
    {
        "id": "39a86dfd752ee1c1",
        "type": "debug",
        "z": "e02fb78e674d1e65",
        "name": "debug 25",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 1120,
        "wires": []
    },
    {
        "id": "591a602877cbcdb5",
        "type": "catch",
        "z": "e02fb78e674d1e65",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 120,
        "y": 1380,
        "wires": [
            [
                "20a5dd037b9c1e4d"
            ]
        ]
    },
    {
        "id": "20a5dd037b9c1e4d",
        "type": "debug",
        "z": "e02fb78e674d1e65",
        "name": "msg",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 1380,
        "wires": []
    },
    {
        "id": "2ea4d611b4476b64",
        "type": "link in",
        "z": "375d5c966656b361",
        "name": "findDB",
        "links": [],
        "x": 110,
        "y": 100,
        "wires": [
            [
                "ccfe58d6c0c35bad"
            ]
        ],
        "l": true
    },
    {
        "id": "2e067bd1492a1a46",
        "type": "link out",
        "z": "375d5c966656b361",
        "name": "link out 3",
        "mode": "return",
        "links": [],
        "x": 415,
        "y": 100,
        "wires": []
    },
    {
        "id": "850f26bd11c45c81",
        "type": "link in",
        "z": "375d5c966656b361",
        "name": "insertDB",
        "links": [],
        "x": 120,
        "y": 220,
        "wires": [
            [
                "ad76acd06af34364",
                "7a3aef4bde311dfa"
            ]
        ],
        "l": true
    },
    {
        "id": "7a3aef4bde311dfa",
        "type": "link out",
        "z": "375d5c966656b361",
        "name": "link out 4",
        "mode": "return",
        "links": [],
        "x": 235,
        "y": 180,
        "wires": []
    },
    {
        "id": "4858d251cc2afe5c",
        "type": "link in",
        "z": "375d5c966656b361",
        "name": "updateDB",
        "links": [],
        "x": 120,
        "y": 340,
        "wires": [
            [
                "33bdd240470ffc2b",
                "ba42b3f1e81a19d9"
            ]
        ],
        "l": true
    },
    {
        "id": "ba42b3f1e81a19d9",
        "type": "link out",
        "z": "375d5c966656b361",
        "name": "link out 5",
        "mode": "return",
        "links": [],
        "x": 235,
        "y": 300,
        "wires": []
    },
    {
        "id": "ad76acd06af34364",
        "type": "mongodb out",
        "z": "375d5c966656b361",
        "mongodb": "f168eeb2f9b6dc07",
        "name": "MongoDB",
        "collection": "",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 290,
        "y": 220,
        "wires": []
    },
    {
        "id": "33bdd240470ffc2b",
        "type": "mongodb out",
        "z": "375d5c966656b361",
        "mongodb": "f168eeb2f9b6dc07",
        "name": "MongoDB",
        "collection": "",
        "payonly": true,
        "upsert": false,
        "multi": true,
        "operation": "update",
        "x": 290,
        "y": 340,
        "wires": []
    },
    {
        "id": "ccfe58d6c0c35bad",
        "type": "mongodb in",
        "z": "375d5c966656b361",
        "mongodb": "f168eeb2f9b6dc07",
        "name": "MongoDB",
        "collection": "",
        "operation": "find",
        "x": 290,
        "y": 100,
        "wires": [
            [
                "2e067bd1492a1a46"
            ]
        ]
    }
]